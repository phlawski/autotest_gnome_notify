module Autotest::GnomeNotify

  # Time notification will be displayed before disappearing automatically
  EXPIRATION_IN_SECONDS = 6
  icons_dir = "~/.autotest_images"
  error_icon = "#{icons_dir}/ruby_red_icon.png"
  pending_icon = "#{icons_dir}/ruby_yellow_icon.png"
  success_icon = "#{icons_dir}/ruby_green_icon.png"
  unknown_icon = "#{icons_dir}/ruby_grey_icon.png"

  # Convenience method to send an error notification message
  #
  # [stock_icon]   Stock icon name of icon to display
  # [title]        Notification message title
  # [message]      Core message for the notification
  def self.notify(stock_icon, title, message)
    options = "-t #{EXPIRATION_IN_SECONDS * 1000} -i #{stock_icon}"
    system "notify-send #{options} '#{title}' \"#{message}\""
  end

  Autotest.add_hook :run_command do
    print "\n"*2 + '-'*80 + "\n"*2
    print "\e[2J\e[f"   # clear the terminal
  end

  Autotest.add_hook :ran_command do |autotest|
    name = Dir.pwd.chomp.split(/\//).last
    if autotest.results.grep(/Finished in/).empty?
      notify unknown_icon, "Cannot run tests", '' 
    else
      filtered = autotest.results.grep(/\d+\s+(example|test)s?/)
      output = filtered.last.gsub(/(\e.*?m|\n)/, '')
      if output =~ /[1-9]\d*\s+(failure|error)s?/
        notify error_icon, "Tests failed", "#{output}" 
      elsif output =~ /pending/
        notify pending_icon, "Tests not fully implemented yet", "#{output}"
      else
        notify success_icon, "All tests passed", "#{output}"
      end
    end
  end
end
